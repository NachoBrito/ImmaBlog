<?php

namespace NachoBrito\SpamFilterBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * TermRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TermRepository extends EntityRepository
{

    /**
     * 
     * @param array $words
     */
    public function getTermsForWords(array $words)
    {
        //$wList = implode(',', $words);
        $qb = $this->createQueryBuilder('t');
        $q = $qb
                ->add('where', $qb->expr()->in('t.term', '?1'))
                ->setParameters(array(1 => $words))
                ->getQuery();
        $terms = $q->execute();
        
        return $terms;        
    }
    

    /**
     * Returns the inverse frequencies of the provided terms (ie
     * the number of docs where each term is present)
     * 
     * @param array $terms
     * @return array
     */
    public function getTermsIF(array $terms){
        $ids = array();
        $counts= array();
        $sql = "SELECT count(id) FROM TermFrequency WHERE term_id=:tid;";
        $c = $this->getEntityManager()->getConnection();        
        $st = $c->prepare($sql);
        foreach($terms as $t){
            $id = $t->getId();
            $st->bindValue('tid', $id);
            $st->execute();
            $counts[$id] = (int)$st->fetchColumn();
        }
        
        return $counts;
    }

}
